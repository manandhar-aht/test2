28 Sep 21:23:49 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:23:52 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:23:53 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:23:53 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:23:53 INFO   [geoserver.config] - Read Catalog in 200.9 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:23:54 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:23:54 CONFIG [gwc.config] - Create configuration file '/opt/geoserver_data/gwc/geowebcache.xml' from template jar:file:/usr/local/tomcat/webapps/geoserver/WEB-INF/lib/gwc-core-1.27.2.jar!/geowebcache_empty.xml
28 Sep 21:23:54 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
28 Sep 21:23:54 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
28 Sep 21:23:54 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:23:54 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:23:54 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:23:54 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:23:54 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:23:54 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.363 ms
28 Sep 21:23:54 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:23:54 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:23:54 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:23:54 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:23:54 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:23:55 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:23:55 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:23:55 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:23:55 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:23:56 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 243.9 ms
28 Sep 21:23:56 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@3242577b
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:23:56 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:23:56 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:23:56 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:23:56 INFO   [security.csp] - Creating csp.xml with the default configuration
28 Sep 21:23:56 INFO   [security.csp] - Creating csp_default.xml with the default configuration
28 Sep 21:23:58 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:23:58 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:23:58 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:23:59 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:23:59 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:23:59 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:24:03 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:24:03 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:24:04 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:24:04 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:24:04 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:24:04 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:24:04 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:24:04 INFO   [geoserver.security] - Strong cryptography is available
28 Sep 21:24:05 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:24:05 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:24:05 INFO   [geoserver.security] - Start encrypting configuration passwords using strongPbePasswordEncoder
28 Sep 21:24:05 INFO   [geoserver.security] - End encrypting configuration passwords
28 Sep 21:24:05 INFO   [config.XMLConfiguration] - Wrote configuration to /opt/geoserver_data/gwc
28 Sep 21:25:53 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:25:53 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:25:53 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.122 ms
28 Sep 21:25:54 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:25:54 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:25:54 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.640 ms
28 Sep 21:25:54 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:25:54 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@22f2c904[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@76188ffc] rejected from java.util.concurrent.ThreadPoolExecutor@2c8d9957[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:25:54 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:26:24 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:26:27 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:26:29 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:26:29 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:26:29 CONFIG [config.datadir] - Loaded style point
28 Sep 21:26:29 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:26:29 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:26:29 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:26:29 CONFIG [config.datadir] - Loaded style line
28 Sep 21:26:29 INFO   [geoserver.config] - Read Catalog in 160.5 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:26:29 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:26:29 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:26:30 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:26:30 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:26:30 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:26:30 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:26:30 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:26:30 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:26:30 CONFIG [gwc.layer] - Loaded 0 tile layers in 5.293 ms
28 Sep 21:26:30 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:26:30 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:26:30 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:26:30 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:26:30 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:26:30 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:26:30 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:26:30 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:26:30 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:26:31 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 165.4 ms
28 Sep 21:26:31 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@732cc5ea
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:26:31 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:26:31 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:26:31 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:26:32 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:26:33 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:26:33 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:26:33 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:26:33 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:26:33 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:26:37 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:26:37 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:26:38 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:26:38 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:26:38 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:26:38 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:26:38 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:26:38 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:26:38 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:28:07 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:28:07 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:28:07 CONFIG [gwc.layer] - Loaded 0 tile layers in 477.6 μs
28 Sep 21:28:07 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:28:07 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:28:07 CONFIG [gwc.layer] - Loaded 0 tile layers in 438.4 μs
28 Sep 21:28:07 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:28:07 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@6e3de7b9[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@13005130] rejected from java.util.concurrent.ThreadPoolExecutor@7c20a865[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:28:07 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:28:44 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:28:47 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:28:48 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:28:48 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:28:48 CONFIG [config.datadir] - Loaded style point
28 Sep 21:28:48 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:28:48 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:28:48 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:28:48 CONFIG [config.datadir] - Loaded style line
28 Sep 21:28:48 INFO   [geoserver.config] - Read Catalog in 222.2 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:28:49 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:28:49 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:28:49 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:28:49 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:28:49 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:28:49 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:28:49 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:28:49 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:28:49 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.504 ms
28 Sep 21:28:49 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:28:49 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:28:49 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:28:49 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:28:49 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:28:49 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:28:50 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:28:50 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:28:50 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:28:50 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 165.7 ms
28 Sep 21:28:50 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:28:50 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:28:51 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:28:51 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:28:53 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:28:54 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:28:54 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:28:54 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:28:54 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:28:54 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:28:58 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:28:58 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:28:59 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:28:59 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:28:59 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:28:59 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:28:59 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:28:59 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:28:59 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:29:43 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:29:43 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:29:43 CONFIG [gwc.layer] - Loaded 0 tile layers in 474.1 μs
28 Sep 21:29:43 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:29:43 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:29:43 CONFIG [gwc.layer] - Loaded 0 tile layers in 432.0 μs
28 Sep 21:29:44 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:29:44 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@791fe0d8[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@12a3601e] rejected from java.util.concurrent.ThreadPoolExecutor@13472ce2[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:29:44 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:30:17 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:30:20 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:30:22 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:30:22 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:30:22 CONFIG [config.datadir] - Loaded style point
28 Sep 21:30:22 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:30:22 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:30:22 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:30:22 CONFIG [config.datadir] - Loaded style line
28 Sep 21:30:22 INFO   [geoserver.config] - Read Catalog in 228.3 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:30:23 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:30:23 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:30:23 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:30:23 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:30:23 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:30:23 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:30:23 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:30:23 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:30:23 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.153 ms
28 Sep 21:30:23 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:30:23 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:30:23 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:30:23 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:30:23 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:30:23 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:30:24 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:30:24 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:30:24 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:30:24 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 162.3 ms
28 Sep 21:30:24 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:30:24 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:30:25 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:30:25 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:30:27 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:30:28 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:30:28 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:30:28 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:30:28 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:30:28 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:30:32 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:30:33 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:30:33 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:30:33 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:30:33 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:30:34 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:30:34 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:31:15 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:31:15 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:31:15 CONFIG [gwc.layer] - Loaded 0 tile layers in 592.5 μs
28 Sep 21:31:15 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:31:15 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:31:15 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.295 ms
28 Sep 21:31:15 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:31:15 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@791fe0d8[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@12a3601e] rejected from java.util.concurrent.ThreadPoolExecutor@13472ce2[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:31:15 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:31:46 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:31:49 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:31:50 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:31:50 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:31:50 CONFIG [config.datadir] - Loaded style point
28 Sep 21:31:50 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:31:50 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:31:50 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:31:50 CONFIG [config.datadir] - Loaded style line
28 Sep 21:31:50 INFO   [geoserver.config] - Read Catalog in 186.6 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:31:51 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:31:51 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:31:51 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:31:51 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:31:51 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:31:51 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:31:51 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:31:51 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:31:51 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.376 ms
28 Sep 21:31:51 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:31:51 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:31:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:31:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:31:51 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:31:51 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:31:52 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:31:52 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:31:52 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:31:52 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 159.6 ms
28 Sep 21:31:52 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:31:52 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:31:53 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:31:53 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:31:54 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:31:55 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:31:55 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:31:55 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:31:55 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:31:55 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:31:59 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:31:59 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:32:00 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:32:00 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:32:00 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:32:00 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:32:00 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:32:00 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:32:00 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:33:55 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:33:55 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:33:55 CONFIG [gwc.layer] - Loaded 0 tile layers in 483.7 μs
28 Sep 21:33:55 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:33:55 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:33:55 CONFIG [gwc.layer] - Loaded 0 tile layers in 375.2 μs
28 Sep 21:33:55 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:33:55 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@60d74a25[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@1adad432] rejected from java.util.concurrent.ThreadPoolExecutor@2bccc4a3[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:33:55 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:34:28 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:34:31 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:34:32 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:34:33 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:34:33 CONFIG [config.datadir] - Loaded style point
28 Sep 21:34:33 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:34:33 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:34:33 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:34:33 CONFIG [config.datadir] - Loaded style line
28 Sep 21:34:33 INFO   [geoserver.config] - Read Catalog in 245.9 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:34:33 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:34:33 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:34:34 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:34:34 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:34:34 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:34:34 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:34:34 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:34:34 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:34:34 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.128 ms
28 Sep 21:34:34 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:34:34 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:34:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:34:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:34:34 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:34:34 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:34:35 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:34:35 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:34:35 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:34:35 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 139.8 ms
28 Sep 21:34:35 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:34:35 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:34:35 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:34:35 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:34:37 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:34:37 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:34:37 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:34:38 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:34:38 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:34:38 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:34:42 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:34:42 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:34:42 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:34:42 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:34:42 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:34:42 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:34:42 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:34:43 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:34:43 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:34:52 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:34:52 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:34:52 CONFIG [gwc.layer] - Loaded 0 tile layers in 508.9 μs
28 Sep 21:34:52 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:34:52 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:34:52 CONFIG [gwc.layer] - Loaded 0 tile layers in 547.0 μs
28 Sep 21:34:52 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 21:34:52 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@699c2090[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@17fe9655] rejected from java.util.concurrent.ThreadPoolExecutor@6a180fb9[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 21:34:52 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 21:35:30 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 21:35:32 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 21:35:34 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 21:35:34 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:35:34 CONFIG [config.datadir] - Loaded style point
28 Sep 21:35:34 CONFIG [config.datadir] - Loaded style raster
28 Sep 21:35:34 CONFIG [config.datadir] - Loaded style polygon
28 Sep 21:35:34 CONFIG [config.datadir] - Loaded style generic
28 Sep 21:35:34 CONFIG [config.datadir] - Loaded style line
28 Sep 21:35:34 INFO   [geoserver.config] - Read Catalog in 225.2 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 21:35:35 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:35:35 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 21:35:35 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 21:35:35 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 21:35:35 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 21:35:35 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 21:35:35 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 21:35:35 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 21:35:35 CONFIG [gwc.layer] - Loaded 0 tile layers in 5.242 ms
28 Sep 21:35:35 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 21:35:35 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 21:35:35 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:35:35 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 21:35:35 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:35:35 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:35:36 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 21:35:36 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 21:35:36 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 21:35:36 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 205.6 ms
28 Sep 21:35:36 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 21:35:36 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 21:35:37 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 21:35:37 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 21:35:38 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 21:35:38 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 21:35:38 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 21:35:39 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 21:35:39 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 21:35:39 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:35:44 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 21:35:44 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 21:35:44 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 21:35:44 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 21:35:44 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 21:35:44 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 21:35:44 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 21:35:45 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 21:35:45 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:28 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:30 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 21:36:31 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:03 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 22:26:06 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 22:26:08 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 22:26:09 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 22:26:09 CONFIG [config.datadir] - Loaded style point
28 Sep 22:26:09 CONFIG [config.datadir] - Loaded style raster
28 Sep 22:26:09 CONFIG [config.datadir] - Loaded style polygon
28 Sep 22:26:09 CONFIG [config.datadir] - Loaded style generic
28 Sep 22:26:09 CONFIG [config.datadir] - Loaded style line
28 Sep 22:26:09 INFO   [geoserver.config] - Read Catalog in 362.4 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 22:26:09 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:26:09 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 22:26:09 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 22:26:09 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 22:26:09 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 22:26:10 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 22:26:10 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 22:26:10 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 22:26:10 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.713 ms
28 Sep 22:26:10 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 22:26:10 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 22:26:10 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:26:10 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:26:10 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:26:10 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:26:10 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 22:26:10 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 22:26:10 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 22:26:11 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 162.6 ms
28 Sep 22:26:11 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 22:26:11 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 22:26:11 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 22:26:11 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 22:26:13 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 22:26:14 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 22:26:14 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 22:26:14 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 22:26:14 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 22:26:14 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 22:26:19 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 22:26:19 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 22:26:20 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:26:20 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 22:26:20 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 22:26:20 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 22:26:20 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 22:26:21 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 22:26:21 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:21 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:36 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:37 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:26:49 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:05 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:32:14 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:36:25 WARN   [servlet.PageNotFound] - No mapping for GET /geoserver/sahel/wms
28 Sep 22:38:27 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 22:38:27 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 22:38:27 CONFIG [gwc.layer] - Loaded 0 tile layers in 1.006 ms
28 Sep 22:38:27 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 22:38:27 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 22:38:27 CONFIG [gwc.layer] - Loaded 0 tile layers in 433.8 μs
28 Sep 22:38:27 INFO   [jdbc.JDBCQuotaStore] - Closing up the JDBC quota store 
28 Sep 22:38:27 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@54055c50[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@23a4c78c] rejected from java.util.concurrent.ThreadPoolExecutor@3ebe5e61[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
28 Sep 22:38:27 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
28 Sep 22:39:27 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
28 Sep 22:39:30 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
28 Sep 22:39:32 CONFIG [geoserver.config] - Loading catalog /opt/geoserver_data
28 Sep 22:39:32 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 22:39:32 CONFIG [config.datadir] - Loaded style point
28 Sep 22:39:32 CONFIG [config.datadir] - Loaded style raster
28 Sep 22:39:32 CONFIG [config.datadir] - Loaded style polygon
28 Sep 22:39:32 CONFIG [config.datadir] - Loaded style generic
28 Sep 22:39:32 CONFIG [config.datadir] - Loaded style line
28 Sep 22:39:32 INFO   [geoserver.config] - Read Catalog in 160.3 ms: workspaces: 0, namespaces: 0, styles: 5, stores: 0, resources: 0, layers: 0, layer groups: 0.
28 Sep 22:39:32 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:39:32 CONFIG [config.XMLConfiguration] - TileLayerConfiguration file validated fine.
28 Sep 22:39:32 CONFIG [config.XMLConfiguration] - Initializing GridSets from /opt/geoserver_data/gwc
28 Sep 22:39:32 INFO   [config.XMLConfiguration] - Read GridSet InspireCRS84Quad
28 Sep 22:39:32 CONFIG [config.XMLConfiguration] - Initializing layers from /opt/geoserver_data/gwc
28 Sep 22:39:33 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
28 Sep 22:39:33 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
28 Sep 22:39:33 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
28 Sep 22:39:33 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.261 ms
28 Sep 22:39:33 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration /opt/geoserver_data/gwc contained no blob store infos.
28 Sep 22:39:33 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOWEBCACHE_CACHE_DIR set to /opt/geoserver_data/gwc, using it as the default prefix.
28 Sep 22:39:33 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:39:33 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
28 Sep 22:39:33 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:39:33 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:39:33 CONFIG [config.datadir] - Loading GeoServer config...
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'WCSInfoImpl-2bfb7be2:1999235f5b9:-7ffb', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'WFSInfoImpl-2bfb7be2:1999235f5b9:-7ffa', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'WMSInfoImpl-2bfb7be2:1999235f5b9:-7ff9', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'WMTSInfoImpl-2bfb7be2:1999235f5b9:-7ff8', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'csw', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Loaded service 'WPSInfoImpl-2bfb7be2:1999235f5b9:-7ff7', enabled
28 Sep 22:39:33 CONFIG [config.datadir] - Catalog and configuration loader uses 2 threads out of 2 available cores.
28 Sep 22:39:33 CONFIG [config.datadir] - Loading workspace services and settings...
28 Sep 22:39:33 CONFIG [config.datadir] - GeoServer config (settings and services) loaded in 147.3 ms
28 Sep 22:39:33 ERROR  [geoserver.config] - Failed to run initializer org.geoserver.config.LockProviderInitializer@7bcf3081
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'h2' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:874)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1359)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1171)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:249)
	at org.geoserver.platform.GeoServerExtensions.bean(GeoServerExtensions.java:293)
	at org.geoserver.config.LockProviderInitializer.setLockProvider(LockProviderInitializer.java:58)
	at org.geoserver.config.LockProviderInitializer.initialize(LockProviderInitializer.java:47)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:342)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationGeoServer(GeoServerLoader.java:302)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:276)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:63)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:781)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:209)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4059)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4501)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:599)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:571)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:604)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1174)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1883)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:123)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1085)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1579)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:109)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:389)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:336)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:776)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:722)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:82)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:874)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
28 Sep 22:39:33 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: ows.global=100
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: ows.wms.getmap=10
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: ows.wfs.getfeature.application/msexcel=4
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: user=6
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: ows.gwc=16
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: user.ows.wps.execute=1000/d;30s
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: user.ows.wms.getmap=30/s
28 Sep 22:39:34 INFO   [flow.config] - Loaded control-flow rule: ip=10
28 Sep 22:39:34 CONFIG [geoserver.flow] - Control-flow active with 8 flow controllers
28 Sep 22:39:35 WARN   [turbojpeg.TurboJPEGMapResponse] - The turbo jpeg encoder is available for usage
28 Sep 22:39:36 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
28 Sep 22:39:36 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
28 Sep 22:39:36 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
28 Sep 22:39:36 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
28 Sep 22:39:36 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 7 bindable processes in GeoServer specific processes
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 89 bindable processes in Deprecated processes
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process vec:GroupCandidateSelection as the input groupingAttributes of type class java.lang.Object cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 31 bindable processes in Vector processes
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process ras:ConvolveCoverage as the input kernel of type class javax.media.jai.KernelJAI cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input zones of type class java.lang.Object cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input nodata of type class it.geosolutions.jaiext.range.Range cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the input rangeData of type class java.lang.Object cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Blacklisting process ras:RasterZonalStatistics2 as the output zonal statistics of type interface java.util.List cannot be handled
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 18 bindable processes in Raster processes
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 48 bindable processes in Geometry processes
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 1 bindable processes in PolygonLabelProcess
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 22:39:40 CONFIG [geoserver.wps] - Found 1 bindable processes in geo
28 Sep 22:39:40 INFO   [geoserver.monitor] - Monitor extension enabled
28 Sep 22:39:41 CONFIG [diskquota.ConfigLoader] - Quota config is: /opt/geoserver_data/gwc/geowebcache-diskquota.xml
28 Sep 22:39:41 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
28 Sep 22:39:41 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
28 Sep 22:39:41 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 20.0 GB
28 Sep 22:39:41 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 5 SECONDS
28 Sep 22:39:42 CONFIG [geoserver.security] - Start reloading user/groups for service named default
28 Sep 22:39:42 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
28 Sep 22:43:14 INFO   [geoserver.security] - Strong cryptography is available
28 Sep 22:51:36 ERROR  [geoserver.rest] - No such workspace: 'sahel' found
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such workspace: 'sahel' found
	at org.geoserver.rest.catalog.WorkspaceController.workspaceGet(WorkspaceController.java:85)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.setDefaultWorkspace(DefaultCatalogFacade.java:765)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.setDefaultWorkspace(IsolatedCatalogFacade.java:389)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.setDefaultWorkspace(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.setDefaultWorkspace(CatalogImpl.java:1506)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1406)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1231)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:642)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:708)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:110)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.a897e75a-d95c-4b33-9218-a184a253aadb.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1412)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1231)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:642)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:708)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:110)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.a44df2de-9f6b-40bc-b3d6-4c4f0a1939c4.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:36 INFO   [rest.catalog] - Added workspace sahel
28 Sep 22:51:36 INFO   [rest.catalog] - POST workspace sahel
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.setDefaultNamespace(DefaultCatalogFacade.java:670)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.setDefaultNamespace(IsolatedCatalogFacade.java:321)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.setDefaultNamespace(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.setDefaultNamespace(CatalogImpl.java:1384)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1270)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1171)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:582)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:650)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.dbdaace6-ff15-4bcb-beff-c813ff1a7688.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1276)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1171)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:582)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:650)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.8b36ba93-6bb7-459e-918b-6374267e618d.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:36 ERROR  [geoserver.rest] - No such datastore: sahel,postgis_db
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such datastore: sahel,postgis_db
	at org.geoserver.rest.catalog.DataStoreController.getExistingDataStore(DataStoreController.java:213)
	at org.geoserver.rest.catalog.DataStoreController.dataStoreDelete(DataStoreController.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:561)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:36 ERROR  [geoserver.rest] - No such datastore: sahel,postgis_db
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such datastore: sahel,postgis_db
	at org.geoserver.rest.catalog.DataStoreController.getExistingDataStore(DataStoreController.java:213)
	at org.geoserver.rest.catalog.DataStoreController.dataStoreGet(DataStoreController.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.setDefaultDataStore(DefaultCatalogFacade.java:267)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.setDefaultDataStore(IsolatedCatalogFacade.java:105)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.setDefaultDataStore(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.setDefaultDataStore(CatalogImpl.java:408)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:188)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.7445f26a-7803-4fcf-8520-08803b745d22.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 22:51:36 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.52cae39f-8a6f-450d-a547-628f5cbfafe7.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:36 INFO   [rest.catalog] - POST data store postgis_db
28 Sep 22:51:41 ERROR  [geoserver.rest] - No such layer: sahel:wells
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such layer: sahel:wells
	at org.geoserver.rest.catalog.LayerController.layerGet(LayerController.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:41 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[wells]
28 Sep 22:51:42 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.f4c6ba59-fd45-4ca6-afaf-69d9913cd21d.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:43 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.c2e53acf-12d9-4226-ac8c-a8b53c007812.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:51:43 INFO   [rest.catalog] - POST feature typepostgis_db,wells
28 Sep 22:51:43 ERROR  [geoserver.rest] - No such layer: sahel:boreholes
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such layer: sahel:boreholes
	at org.geoserver.rest.catalog.LayerController.layerGet(LayerController.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:43 CONFIG [platform.resource] - Notifying ENTRY_CREATE change on /opt/geoserver_data/gwc-layers. Created: 1, removed: 0, modified: 0
28 Sep 22:51:43 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[boreholes]
28 Sep 22:51:43 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.4f31ab65-e3b0-4cf6-b448-508791abbf22.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:43 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.514cbf6c-bb79-4e6e-9077-40c570e515d3.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:51:43 INFO   [rest.catalog] - POST feature typepostgis_db,boreholes
28 Sep 22:51:43 ERROR  [geoserver.rest] - No such layer: sahel:ponds
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such layer: sahel:ponds
	at org.geoserver.rest.catalog.LayerController.layerGet(LayerController.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:43 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[ponds]
28 Sep 22:51:43 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.e1406760-db95-4434-9087-32e85f397272.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:43 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.703f3f39-d95a-4d62-b472-9946eb82b5dc.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:51:43 INFO   [rest.catalog] - POST feature typepostgis_db,ponds
28 Sep 22:51:48 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 2, removed: 0, modified: 0
28 Sep 22:51:56 ERROR  [geoserver.rest] - No such workspace: 'chad' found
org.geoserver.rest.ResourceNotFoundException 404 NOT_FOUND: No such workspace: 'chad' found
	at org.geoserver.rest.catalog.WorkspaceController.workspaceGet(WorkspaceController.java:85)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:51:56 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1412)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1231)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:642)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:708)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:110)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.55e2d596-7c4b-4392-a53a-de2a54906ce3.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:56 INFO   [rest.catalog] - Added workspace chad
28 Sep 22:51:56 INFO   [rest.catalog] - POST workspace chad
28 Sep 22:51:56 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1276)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1171)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:582)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:650)
	at org.geoserver.rest.catalog.WorkspaceController.workspacePost(WorkspaceController.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.5c49cc48-7d99-4b6c-aa71-17b208d01be7.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:56 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.setDefaultDataStore(DefaultCatalogFacade.java:267)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.setDefaultDataStore(IsolatedCatalogFacade.java:105)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.setDefaultDataStore(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.setDefaultDataStore(CatalogImpl.java:408)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:188)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.973e906b-c038-42d9-8569-7285fd13b1d5.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 22:51:56 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.98c355f3-9eb6-4010-9f9e-76c9ede51db2.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:56 INFO   [rest.catalog] - POST data store admin_regions
28 Sep 22:51:56 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[water_bodies]. Unable to encrypt connection parameters.
28 Sep 22:51:56 WARN   [rest.catalog] - Unable to determine datastore type from connection parameters
28 Sep 22:51:56 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[water_bodies]. Unable to encrypt connection parameters.
28 Sep 22:51:56 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.cd36a6c1-1786-4a06-aee8-d6e5f814a4ca.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:56 INFO   [rest.catalog] - POST data store water_bodies
28 Sep 22:51:57 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[land_cover]. Unable to encrypt connection parameters.
28 Sep 22:51:57 WARN   [rest.catalog] - Unable to determine datastore type from connection parameters
28 Sep 22:51:57 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[land_cover]. Unable to encrypt connection parameters.
28 Sep 22:51:57 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.c61b085b-6020-441a-9b5d-5eee258abda8.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:57 INFO   [rest.catalog] - POST data store land_cover
28 Sep 22:51:57 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[climate_zones]. Unable to encrypt connection parameters.
28 Sep 22:51:57 WARN   [rest.catalog] - Unable to determine datastore type from connection parameters
28 Sep 22:51:57 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[climate_zones]. Unable to encrypt connection parameters.
28 Sep 22:51:57 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.5937ab28-5325-4a7e-ab93-40bb458c9062.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:51:57 INFO   [rest.catalog] - POST data store climate_zones
28 Sep 22:52:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:52:52 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 22:52:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:52:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[15.1165 : 32.525, 10.0036 : 19.1531]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=15.1165,10.0036,32.525,19.1531, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
28 Sep 22:52:52 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 22:52:52 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:52:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:52:52 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
28 Sep 22:52:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:52:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[6.943359375 : 40.693359375, 5.73486328125 : 23.44482421875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 403
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=6.943359375,5.73486328125,40.693359375,23.44482421875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=403, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
28 Sep 22:52:52 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
28 Sep 22:52:52 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:52:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:52:59 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 22:52:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:52:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4.5 : 23.8229, 11.0036 : 20.1531]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-4.5,11.0036,23.8229,20.1531, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
28 Sep 22:52:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 22:52:59 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:52:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:52:59 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
28 Sep 22:52:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:52:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-7.20703125 : 26.54296875, 8.3056640625 : 22.8076171875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-7.20703125,8.3056640625,26.54296875,22.8076171875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
28 Sep 22:52:59 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
28 Sep 22:52:59 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:53:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:04 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:53:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-74.006 : 22.1053, 10.3879 : 40.7128]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-74.006,10.3879,22.1053,40.7128, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
28 Sep 22:53:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 22:53:04 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:53:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:04 INFO   [geoserver.flow] - Request [WMS 1.1.1 GetMap] starting, processing through flow controllers
28 Sep 22:53:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:53:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-93.515625 : 41.484375, -3.515625 : 54.4921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-93.515625,-3.515625,41.484375,54.4921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
28 Sep 22:53:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.1 GetMap]
28 Sep 22:53:04 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_1
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:34 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_3
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:34 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 2
28 Sep 22:53:34 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:34 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:34 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
28 Sep 22:53:34 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:53:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_0
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:34 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_2
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:34 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
28 Sep 22:53:34 WARN   [operation.projection] - Possible use of "Popular Visualisation Pseudo Mercator" projection outside its valid area.
Longitude 2147483287°00.0'W is out of range (±180°).
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:34 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:34 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:53:34 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:34 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:53:34 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:34 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_0
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_2
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_3
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:38 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer sahel:gadm41_TCD_1
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1449)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:350)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:107)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1568)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:785)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:261)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:53:38 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:38 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
28 Sep 22:53:38 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:53:38 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:53:38 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 1
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:38 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:53:38 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:38 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:53:38 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:38 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:53:38 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:53:38 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:56:06 INFO   [rest.catalog] - GET chad
28 Sep 22:56:06 INFO   [rest.catalog] - got chad
28 Sep 22:56:06 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.fade6c32-33fb-4f53-bc60-27e4cdbbdab0.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:06 INFO   [rest.catalog] - POST data store gadm41_TCD_0
28 Sep 22:56:06 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[gadm41_TCD_0]
28 Sep 22:56:06 WARN   [rest.catalog] - Unable to fill in metadata from underlying feature source
java.io.IOException: Schema 'http://chad:gadm41_TCD_0' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:535)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:331)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:591)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:96)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:237)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.45d195db-5418-4c3e-8be9-d99d41def6be.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.8a9cf5a6-152d-4771-9f5a-5feda1c7fbe3.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST feature typegadm41_TCD_0,gadm41_TCD_0
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.8f97043c-6007-4310-99bb-a2c2cc3bbff0.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST data store gadm41_TCD_1
28 Sep 22:56:07 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[gadm41_TCD_1]
28 Sep 22:56:07 WARN   [rest.catalog] - Unable to fill in metadata from underlying feature source
java.io.IOException: Schema 'http://chad:gadm41_TCD_1' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:535)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:331)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:591)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:96)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:237)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.cc959813-48cb-48b6-a298-db0bec914b4d.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.e87798c6-f90c-45e6-934d-0fe270fa8b6d.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST feature typegadm41_TCD_1,gadm41_TCD_1
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.49ef8f76-2e1e-496e-8ec4-49f0360c9c80.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST data store gadm41_TCD_2
28 Sep 22:56:07 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[gadm41_TCD_2]
28 Sep 22:56:07 WARN   [rest.catalog] - Unable to fill in metadata from underlying feature source
java.io.IOException: Schema 'http://chad:gadm41_TCD_2' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:535)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:331)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:591)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:96)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:237)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.23d9de5e-3888-43ba-9ecc-fb2885e68d8f.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.8e5a0292-315c-4a66-b9fb-ef5cd33c8f3b.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST feature typegadm41_TCD_2,gadm41_TCD_2
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:195)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1201)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:612)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:92)
	at org.geoserver.rest.catalog.DataStoreController.dataStorePost(DataStoreController.java:148)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.d395d2df-ebb1-425d-b33b-4e0ecaa8d268.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST data store gadm41_TCD_3
28 Sep 22:56:07 WARN   [catalog.impl] - Failed to load actual store for FeatureTypeInfoImpl[gadm41_TCD_3]
28 Sep 22:56:07 WARN   [rest.catalog] - Unable to fill in metadata from underlying feature source
java.io.IOException: Schema 'http://chad:gadm41_TCD_3' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:535)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:331)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:591)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:96)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:237)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:460)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1186)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:597)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:255)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:267)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.3c630915-4eb6-463d-b6dc-a3db061bdfa4.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 22:56:07 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:755)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1146)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:557)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:423)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:305)
	at org.geoserver.rest.catalog.FeatureTypeController.featureTypePost(FeatureTypeController.java:270)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.cc094b46-566b-4a71-aee8-b1095608a950.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 131 more
28 Sep 22:56:07 INFO   [rest.catalog] - POST feature typegadm41_TCD_3,gadm41_TCD_3
28 Sep 22:56:08 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 4, removed: 0, modified: 0
28 Sep 22:56:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
28 Sep 22:56:27 INFO   [geoserver.flow] - Request [WFS 1.0.0 GetFeature] starting, processing through flow controllers
28 Sep 22:56:27 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:56:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://sahel}wells
    maxFeatures = 5
    outputFormat = application/json
    resultType = results
28 Sep 22:56:27 INFO   [geoserver.flow] - releasing flow controllers for [WFS 1.0.0 GetFeature]
28 Sep 22:56:27 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:56:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
28 Sep 22:56:45 INFO   [geoserver.flow] - Request [WFS 1.0.0 GetFeature] starting, processing through flow controllers
28 Sep 22:56:45 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:56:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://chad}gadm41_TCD_0
    maxFeatures = 1
    outputFormat = application/json
    resultType = results
28 Sep 22:56:45 INFO   [geoserver.flow] - releasing flow controllers for [WFS 1.0.0 GetFeature]
28 Sep 22:56:45 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:57:39 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:57:39 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 22:57:39 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:57:39 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-24.0 : 24.0, 7.0 : 23.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = false
	Height = 512
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=-24,7,24,23, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=512, HEIGHT=512, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 512
28 Sep 22:57:39 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 22:57:39 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:57:48 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:57:48 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 22:57:48 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:57:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-30.0 : 40.0, -20.0 : 35.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = false
	Height = 512
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=-30,-20,40,35, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=512, HEIGHT=512, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 512
28 Sep 22:57:48 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 22:57:48 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:58:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:21 INFO   [geoserver.flow] - Request [wms 1.1.1 GetCapabilities] starting, processing through flow controllers
28 Sep 22:58:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:58:21 INFO   [geoserver.wms] - 
Request: getCapabilities
	AcceptLanguages = null
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	Namespace = null
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=wms}
	Request = GetCapabilities
	RequestCharset = null
	RootLayerEnabled = null
	UpdateSequence = null
	Version = 1.1.1
28 Sep 22:58:22 INFO   [geoserver.flow] - releasing flow controllers for [wms 1.1.1 GetCapabilities]
28 Sep 22:58:22 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:56 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
28 Sep 22:58:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:56 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:57 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:57 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:58:57 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:57 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:58:57 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:57 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:58:57 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:57 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:58:57 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:58:57 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:58:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:58:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:58:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[93199.29365927284 : 4032262.0999601586, 649128.4953836579 : 2562073.2021945827]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=93199.29365927284,649128.4953836579,4032262.0999601586,2562073.2021945827, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:00 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 3
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 2
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1353104.3359228538 : 2774366.4756268207, 1217737.565396662 : 1907951.461653537]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1353104.3359228538,1217737.565396662,2774366.4756268207,1907951.461653537, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 2
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 3
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 4
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 4
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 5
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 4
28 Sep 22:59:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:01 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 3
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 3
28 Sep 22:59:02 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 2
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 1
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 1
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 1
28 Sep 22:59:02 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[427203.37267951295 : 3698790.7228203313, 799868.2276503347 : 2388663.8402286973]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=427203.37267951295,799868.2276503347,3698790.7228203313,2388663.8402286973, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1578802.9822928682 : 5701597.705615724, -105464.61068145605 : 3430148.9715949832]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1578802.9822928682,-105464.61068145605,5701597.705615724,3430148.9715949832, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:02 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:02 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 4
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 3
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 3
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 2
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-6143999.6791565325 : 1.0259513387013897E7, -2165788.334417316 : 5800323.15861118]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-6143999.6791565325,-2165788.334417316,10259513.387013897,5800323.15861118, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 22:59:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:03 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1237755.0344367973 : 5361093.693880636, 48454.09743949678 : 3253082.550098043]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1237755.0344367973,48454.09743949678,5361093.693880636,3253082.550098043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 10
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 9
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 7
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 7
28 Sep 22:59:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:04 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 5
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 5
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 4
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 3
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 8
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 9
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 7
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 7
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 5
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 4
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[413273.7575245085 : 3712698.1216832236, 793581.6383811187 : 2395895.8647103906]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=413273.7575245085,793581.6383811187,3712698.1216832236,2395895.8647103906, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:05 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 16
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 15
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 15
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 14
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1238788.1535051602 : 2888500.3355845176, 1166145.4088519295 : 1967302.5220165653]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1238788.1535051602,1166145.4088519295,2888500.3355845176,1967302.5220165653, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 14
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 13
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 13
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 12
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 11
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 11
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 15
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 14
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 17
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 16
28 Sep 22:59:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:06 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 16
28 Sep 22:59:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 15
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 15
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 14
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 13
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 14
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 13
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 12
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 12
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 11
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 11
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 10
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 9
28 Sep 22:59:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1725374.7576909093 : 2402689.7865888565, 1385747.321064105 : 1714674.8510596363]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1725374.7576909093,1385747.321064105,2402689.7865888565,1714674.8510596363, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:07 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 6
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 6
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 6
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 9
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1316019.9798614858 : 2811391.6859847405, 1201000.985650778 : 1927205.0424552478]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1316019.9798614858,1201000.985650778,2811391.6859847405,1927205.0424552478, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:08 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 7
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 8
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:08 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 12
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 12
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 12
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371586 : 3558480.8224836686, 863292.7919788174 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371586,863292.7919788174,3558480.8224836686,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 11
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 11
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 10
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 9
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 7
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 7
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 7
28 Sep 22:59:09 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-928827.7290114914 : 5052659.095481524, 187876.40463489667 : 3092692.631852774]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-928827.7290114914,187876.40463489667,5052659.095481524,3092692.631852774, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:09 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 6
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 6
28 Sep 22:59:09 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:09 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 6
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 6
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 10
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 10
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 9
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 9
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 9
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 8
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 7
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 7
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 7
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 6
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:10 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 6
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[567737.4102371607 : 3558480.822483669, 863292.7919788181 : 2315700.905587757]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=567737.4102371607,863292.7919788181,3558480.822483669,2315700.905587757, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 9
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 10
28 Sep 22:59:10 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 11
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 10
28 Sep 22:59:11 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 9
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 9
28 Sep 22:59:11 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 8
28 Sep 22:59:11 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 7
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 7
28 Sep 22:59:11 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 6
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 6
28 Sep 22:59:11 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 5
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 5
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1480568.9953667393 : 2647105.1091007087, 1275263.7749399603 : 1841773.9307317561]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1480568.9953667393,1275263.7749399603,2647105.1091007087,1841773.9307317561, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 5
28 Sep 22:59:11 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:11 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 5
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 5
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 4
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 4
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 3
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 3
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 2
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 2
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 1
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[761968.5741156847 : 3364559.4371759226, 950951.4628752295 : 2214859.316165058]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=761968.5741156847,950951.4628752295,3364559.4371759226,2214859.316165058, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1460042.1950663468 : 2667599.1712825997, 1265999.803102703 : 1852431.1040026152]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1460042.1950663468,1265999.803102703,2667599.1712825997,1852431.1040026152, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:12 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 2
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 3
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 2
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 22:59:12 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:12 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1134894.054157121 : 2992228.734614618, 1119256.8535811359 : 2021242.6102119314]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1134894.054157121,1119256.8535811359,2992228.734614618,2021242.6102119314, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:13 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:13 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:13 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:13 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1714549.2101295076 : 2413498.068524164, 1380861.6318059596 : 1720295.2952801404]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1714549.2101295076,1380861.6318059596,2413498.068524164,1720295.2952801404, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 2
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1952629.1230442189 : 2175797.86838922, 1488309.7277576944 : 1596688.1647428765]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1952629.1230442189,1488309.7277576944,2175797.86838922,1596688.1647428765, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:14 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:14 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 0
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 1
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:14 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 4
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 4
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 3
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 9
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 8
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 7
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 7
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:15 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 12
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 11
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1810355.3481110823 : 2317844.731400615, 1424100.0007241184 : 1670554.3420901846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1810355.3481110823,1424100.0007241184,2317844.731400615,1670554.3420901846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 11
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 10
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 8
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 8
28 Sep 22:59:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:15 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 8
28 Sep 22:59:15 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:16 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 11
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 10
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 10
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 9
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 9
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 8
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1556408.1467363513 : 2571386.913315417, 1309490.8221254963 : 1802399.5048576281]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1556408.1467363513,1309490.8221254963,2571386.913315417,1802399.5048576281, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 7
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 6
28 Sep 22:59:16 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:16 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:16 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 5
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 3
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1048513.7439868903 : 3078471.277145021, 1080272.464928253 : 2066089.8303925167]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1048513.7439868903,1080272.464928253,3078471.277145021,2066089.8303925167, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 6
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 8
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 7
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 6
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 7
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 6
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 5
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 5
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 5
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:17 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:17 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 4
28 Sep 22:59:17 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 3
28 Sep 22:59:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[32724.938487969106 : 4092640.0048042303, 621835.7505337669 : 2593470.4814622942]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=32724.938487969106,621835.7505337669,4092640.0048042303,2593470.4814622942, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 3
28 Sep 22:59:18 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 2
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 2
28 Sep 22:59:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 2
28 Sep 22:59:18 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 1
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 1
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 1
28 Sep 22:59:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 1
28 Sep 22:59:18 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-2468232.0765159405 : 6589608.252639072, -506873.7908527383 : 3891925.7624519896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-2468232.0765159405,-506873.7908527383,6589608.252639072,3891925.7624519896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:18 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:18 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:59:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:19 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:19 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:59:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:19 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:19 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:59:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:19 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:19 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:59:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:19 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:19 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:19 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 22:59:19 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:19 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[471904.3240244088 : 3804817.054302874, 598719.6031169392 : 2217296.9346208866]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=471904.3240244088,598719.6031169392,3804817.054302874,2217296.9346208866, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:20 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 22:59:20 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1543583.0423431061 : 2789761.6093685376, 1001708.0193051428 : 1606895.2962684112]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1543583.0423431061,1001708.0193051428,2789761.6093685376,1606895.2962684112, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 1
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:21 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[438514.6803989457 : 3836442.5209535677, 586163.937531992 : 2236314.84812855]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=438514.6803989457,586163.937531992,3836442.5209535677,2236314.84812855, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 2
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 22:59:22 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 22:59:22 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1911641.1724939547 : 6062425.415030062, -297576.28121433547 : 3574905.3776111747]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1911641.1724939547,-297576.28121433547,6062425.415030062,3574905.3776111747, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 22:59:22 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 22:59:22 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:02:46 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1612)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1216)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:627)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:587)
	at org.geoserver.rest.catalog.StyleController.stylePost(StyleController.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.b135f093-0b58-4e36-a62b-ce805c4c0e14.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 23:02:46 INFO   [rest.catalog] - POST style wells_style
28 Sep 23:02:46 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:813)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:419)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1702)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1417)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:820)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:597)
	at org.geoserver.rest.catalog.StyleController.stylePut(StyleController.java:434)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.6b29c1c1-d55c-47bd-a4af-55a04a34c166.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 23:02:47 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1612)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1216)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:627)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:587)
	at org.geoserver.rest.catalog.StyleController.stylePost(StyleController.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.45f2e51b-5f04-44ff-a8db-9b59b2d55805.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 23:02:47 INFO   [rest.catalog] - POST style boreholes_style
28 Sep 23:02:47 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:813)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:419)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1702)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1417)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:820)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:597)
	at org.geoserver.rest.catalog.StyleController.stylePut(StyleController.java:434)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.abe85885-7361-4c9b-be86-c05064f137d4.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 23:02:48 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handleAddEvent(UpdateSequenceListener.java:45)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:56)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1806)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1784)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:1612)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1216)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:627)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:587)
	at org.geoserver.rest.catalog.StyleController.stylePost(StyleController.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.0023ce07-6148-4851-8a8d-a70388113b90.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 130 more
28 Sep 23:02:48 INFO   [rest.catalog] - POST style ponds_style
28 Sep 23:02:48 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:813)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:419)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1702)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1417)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:820)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:597)
	at org.geoserver.rest.catalog.StyleController.stylePut(StyleController.java:434)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.d7230ff4-45af-4084-b42e-780d49bd10b3.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 138 more
28 Sep 23:02:49 INFO   [gwc.layer] - Truncating default style for layer sahel:wells, as it changed from generic to wells_style
28 Sep 23:02:49 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer sahel:wells
28 Sep 23:02:49 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:407)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:832)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1392)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:795)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:433)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.save(LocalWorkspaceCatalog.java:310)
	at org.geoserver.rest.catalog.LayerController.layerPut(LayerController.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.2d3cd447-3adb-4595-9f73-950eb2efcabe.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 139 more
28 Sep 23:02:49 INFO   [rest.catalog] - PUT layer sahel:wells
28 Sep 23:02:50 INFO   [gwc.layer] - Truncating default style for layer sahel:boreholes, as it changed from generic to boreholes_style
28 Sep 23:02:50 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer sahel:boreholes
28 Sep 23:02:50 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:407)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:832)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1392)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:795)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:433)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.save(LocalWorkspaceCatalog.java:310)
	at org.geoserver.rest.catalog.LayerController.layerPut(LayerController.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.3d3b47d6-06c5-49f8-8263-762b226c4a2e.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 139 more
28 Sep 23:02:50 INFO   [rest.catalog] - PUT layer sahel:boreholes
28 Sep 23:02:51 INFO   [gwc.layer] - Truncating default style for layer sahel:ponds, as it changed from generic to ponds_style
28 Sep 23:02:51 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer sahel:ponds
28 Sep 23:02:51 ERROR  [config.impl] - Error occurred processing a configuration change listener
org.geoserver.catalog.CatalogException: Error persisting GeoServerInfoImpl[null] to global.xml
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:622)
	at org.geoserver.config.GeoServerConfigPersister.handlePostGlobalChange(GeoServerConfigPersister.java:249)
	at org.geoserver.config.impl.GeoServerImpl.fireGlobalPostModified(GeoServerImpl.java:335)
	at org.geoserver.config.impl.GeoServerImpl.save(GeoServerImpl.java:321)
	at org.geoserver.config.UpdateSequenceListener.incrementSequence(UpdateSequenceListener.java:37)
	at org.geoserver.config.UpdateSequenceListener.handlePostModifyEvent(UpdateSequenceListener.java:60)
	at org.geoserver.catalog.impl.CatalogEventDispatcher.dispatch(CatalogEventDispatcher.java:62)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1830)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:67)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:407)
	at org.geoserver.catalog.impl.IsolatedCatalogFacade.save(IsolatedCatalogFacade.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.catalog.LockingCatalogFacade.invoke(LockingCatalogFacade.java:37)
	at jdk.proxy3/jdk.proxy3.$Proxy40.save(Unknown Source)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:832)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1392)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:795)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:433)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.save(LocalWorkspaceCatalog.java:310)
	at org.geoserver.rest.catalog.LayerController.layerPut(LayerController.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:903)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:809)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:558)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:333)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.filters.HttpHeaderSecurityFilter.doFilter(HttpHeaderSecurityFilter.java:129)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.monitor.MonitorFilter.doFilter(MonitorFilter.java:157)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.flow.controller.IpBlacklistFilter.doFilter(IpBlacklistFilter.java:88)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:181)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:67)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:52)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:139)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SecurityHeadersFilter.doFilter(SecurityHeadersFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:656)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:935)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1833)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:975)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:493)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.IOException: Failed to move /opt/geoserver_data/global.xml.411134c1-9fab-4eca-8fb0-495574893a95.tmp to /opt/geoserver_data/global.xml
	at org.geoserver.platform.resource.Files.move(Files.java:478)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource.setContents(FileSystemResourceStore.java:518)
	at org.geoserver.config.GeoServerConfigPersister.persist(GeoServerConfigPersister.java:616)
	... 139 more
28 Sep 23:02:51 INFO   [rest.catalog] - PUT layer sahel:ponds
28 Sep 23:02:53 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 3
28 Sep 23:02:58 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 0, modified: 2
28 Sep 23:03:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:03:14 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:03:14 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:03:15 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-30.0 : 40.0, -20.0 : 35.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = false
	Height = 512
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=-30,-20,40,35, VERSION=1.1.0, STYLES=wells_style, SERVICE=WMS, WIDTH=512, HEIGHT=512, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 512
28 Sep 23:03:15 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:03:15 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:03:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:03:21 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:03:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:03:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-30.0 : 40.0, -20.0 : 35.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = false
	Height = 512
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=-30,-20,40,35, VERSION=1.1.0, STYLES=boreholes_style, SERVICE=WMS, WIDTH=512, HEIGHT=512, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 512
28 Sep 23:03:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:03:21 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:04:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:04:21 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:04:21 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:04:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[10.0 : 25.0, 8.0 : 18.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = false
	Height = 600
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc, org.geoserver.wms.MapLayerInfo@a6aba1ae, org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=10,8,25,18, VERSION=1.1.0, STYLES=wells_style,boreholes_style,ponds_style, SERVICE=WMS, WIDTH=800, HEIGHT=600, LAYERS=sahel:wells,sahel:boreholes,sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style], StyleImpl[ name=boreholes_style], StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 800
28 Sep 23:04:21 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:04:21 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:56 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:56 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:05:56 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:05:56 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:05:59 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:05:59 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:05:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:00 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:00 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 3
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:00 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:00 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 2
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:00 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 23:06:00 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:00 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 0
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-624689.6763628242 : 4614653.320148502, 453507.5674290897 : 2997913.1646973584]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-624689.6763628242,453507.5674290897,4614653.320148502,2997913.1646973584, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-1293098.7365653235 : 5308059.792358574, 126944.27588278195 : 3332694.4473514105]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-1293098.7365653235,126944.27588278195,5308059.792358574,3332694.4473514105, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:01 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:03 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:03 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[722983.0585988264 : 3432537.3855866343, 930955.603749979 : 2246808.6029296126]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=722983.0585988264,930955.603749979,3432537.3855866343,2246808.6029296126, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:03 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:03 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 23:06:04 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1513969.702918081 : 2738720.6361500467, 1211183.147343509 : 1805964.4265706846]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1513969.702918081,1211183.147343509,2738720.6361500467,1805964.4265706846, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:04 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:04 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:05 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1344383.9239285025 : 2887473.4055858464, 1151102.9846556245 : 1900480.4384373433]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1344383.9239285025,1151102.9846556245,2887473.4055858464,1900480.4384373433, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:05 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:05 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 2
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[936132.3396503087 : 3245572.7353160065, 1006469.2674467796 : 2128013.146746522]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=936132.3396503087,1006469.2674467796,3245572.7353160065,2128013.146746522, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:06 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:06 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:06 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:06 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 23:06:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 8, blocked requests: 0
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 9, blocked requests: 0
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 0
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:06:07 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1499288.2879849821 : 2751598.491495856, 1205981.8751441292 : 1814146.8861867208]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1499288.2879849821,1205981.8751441292,2751598.491495856,1814146.8861867208, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 4
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 3
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 3
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 2
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 1
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 10, blocked requests: 1
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 1
28 Sep 23:06:07 INFO   [geoserver.flow] - Request control-flow performed, running requests: 10, blocked requests: 0
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 9, blocked requests: 0
28 Sep 23:06:07 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:07 INFO   [geoserver.flow] - Request completed, running requests: 8, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 7, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[1636917.37814694 : 2630876.6453687754, 1254740.5515896592 : 1737441.4407392896]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=1636917.37814694,1254740.5515896592,2630876.6453687754,1737441.4407392896, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:06:08 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:06:08 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 1
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:01 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:01 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:07:01 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:01 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:36 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:36 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:36 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:36 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:36 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:36 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:36 INFO   [geoserver.flow] - Request [WMS 1.1.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:36 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[10.0 : 25.0, 8.0 : 18.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=10,8,25,18, VERSION=1.1.0, STYLES=wells_style, SERVICE=WMS, WIDTH=600, HEIGHT=400, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 600
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[10.0 : 25.0, 8.0 : 18.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=10,8,25,18, VERSION=1.1.0, STYLES=ponds_style, SERVICE=WMS, WIDTH=600, HEIGHT=400, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 600
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[10.0 : 25.0, 8.0 : 18.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=10,8,25,18, VERSION=1.1.0, STYLES=boreholes_style, SERVICE=WMS, WIDTH=600, HEIGHT=400, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 600
28 Sep 23:07:36 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:07:36 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:07:36 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:07:36 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:07:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[10.0 : 25.0, 8.0 : 18.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 400
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc, org.geoserver.wms.MapLayerInfo@a6aba1ae, org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/png, BBOX=10,8,25,18, VERSION=1.1.0, STYLES=wells_style,boreholes_style,ponds_style, SERVICE=WMS, WIDTH=600, HEIGHT=400, LAYERS=sahel:wells,sahel:boreholes,sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style], StyleImpl[ name=boreholes_style], StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 600
28 Sep 23:07:36 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.1.0 GetMap]
28 Sep 23:07:36 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 1, blocked requests: 1
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 2, blocked requests: 0
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 3, blocked requests: 0
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 4, blocked requests: 1
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 5, blocked requests: 1
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getServiceInfo
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request [WMS 1.3.0 GetMap] starting, processing through flow controllers
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 6, blocked requests: 1
28 Sep 23:07:52 INFO   [geoserver.flow] - Request control-flow performed, running requests: 7, blocked requests: 0
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f718]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_2}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6da]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_0}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f6f9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_1}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:52 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c56e8063]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:ponds}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ponds_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d0d2b6fc]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:wells}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=wells_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@a6aba1ae]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=sahel:boreholes}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=boreholes_style]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:53 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[-4070227.5925692935 : 8189048.751920415, -1229872.0724625457 : 4723655.186613263]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 1217
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4239f737]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-4070227.5925692935,-1229872.0724625457,8189048.751920415,4723655.186613263, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2506, HEIGHT=1217, TRANSPARENT=true, LAYERS=chad:gadm41_TCD_3}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = urn:ogc:def:crs:EPSG::3857
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.3.0
	ViewParams = null
	Width = 2506
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 6, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 5, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 4, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 3, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 2, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 1, blocked requests: 0
28 Sep 23:07:53 INFO   [geoserver.flow] - releasing flow controllers for [WMS 1.3.0 GetMap]
28 Sep 23:07:53 INFO   [geoserver.flow] - Request completed, running requests: 0, blocked requests: 0
